// List[Op]
memory Program ptr.size end

// @dataclass
// class Op:
//     id: int
//     type: OpType
//     token: Token
const Op.size 24 end
function Op.id    ptr -> int    :           load_INT  end
function Op.type  ptr -> OpType : 8   ptr+  load_INT  end
function Op.token ptr -> ptr    : 16  ptr+  load_PTR  end

// *Token, value, TokenType, file, row, col
function Op.store ptr int OpType ptr -> :
  dup rot swap store_INT ptr++   // Op.value
  dup rot swap store_INT ptr++   // Op.type
  dup rot swap store_PTR ptr++   // Op.token
  drop
end

function Op.puts ptr -> :
  dup "Id       => " puts Op.id print "\n" puts
  dup "OpType   => " puts Op.type print "\n" puts
  Op.token Token.puts "\n" puts
end
