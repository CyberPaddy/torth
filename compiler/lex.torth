function get_next_word ptr -> :
  dup
  0 while dup2 + load_BYTE NULL != do
    if dup2 + load_BYTE 32 == do
      "Word: " puts swap drop swap stdout write "\n" puts break
    endif
    1 +
  done
end

// *Token, value, Location
function load_int_token ptr int str int int -> :
  TokenType.INT rotr Token.store // Token(value, TokenType.INT, location)
end

// *Token, value, Location
function load_word_token ptr str str int int -> :
  TokenType.WORD rotr Token.store // Token(value, TokenType.INT, location)
end

// Returns pointer to Token list
function get_tokens -> ptr :
  1 1 "torth.torth" // File: torth.torth, Row: 1, Column: 1
  "420"   tokens                     load_int_token
  3 1 "torth.torth" // File: torth.torth, Row: 1, Column: 3
  "917"   tokens Token.size     ptr+ load_int_token
  2 4 "torth.torth" // File: torth.torth, Row: 4, Column: 2
  "+"     tokens Token.size 2 * ptr+ load_word_token
  9 6 "torth.torth" // File: torth.torth, Row: 6, Column: 9
  "print" tokens Token.size 3 * ptr+ load_word_token
end

function print_tokens -> :
  tokens                      Token.puts
  tokens Token.size     ptr+  Token.puts
  tokens Token.size 2 * ptr+  Token.puts
  tokens Token.size 3 * ptr+  Token.puts
end
