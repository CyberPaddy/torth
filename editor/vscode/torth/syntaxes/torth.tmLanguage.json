{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Torth",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#datatypes"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#intrinsics"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#maths"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.torth",
          "begin": "//",
          "end": "$"
        }
      ]
    },
    "datatypes": {
      "patterns": [
        {
          "name": "entity.name.type.torth",
          "match": "\\b(?i)(array|bool|char|int|ptr|str)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "storage.type.torth",
          "match": "\\b(?i)(const|end|function|memory)\\b"
        },
        {
          "name": "markup.deleted.torth",
          "match": "\\b(?i)(ret)\\b"
        },
        {
          "name": "entity.name.function.torth",
          "match": "(?i)(?<=function\\s)\\b(\\S+)\\b"
        }
      ]
    },
    "intrinsics": {
      "patterns": [
        {
          "name": "constant.torth",
          "match": "\\b(?i)(ARGC|ARGV|DROP|DUP|DUP2|ENVP|EXIT|HERE|INPUT|NTH|OVER|PUTS|PRINT|ROT|SWAP|SWAP2|SYSCALL0|SYSCALL1|SYSCALL2|SYSCALL3s|SYSCALL4|SYSCALL5|SYSCALL6)\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.torth",
          "match": "\\b(?i)(break|continue|do|done|elif|else|endif|if|include|while)\\b"
        }
      ]
    },
    "maths": {
      "patterns": [
        {
          "name": "constant.numeric.torth",
          "match": "\\b(?i)(\\+|PLUS|\\-|MINUS|\\*|MUL|\\/|DIV|\\%|DIV|&&|AND|OR|==|EQ|!=|NE|>=|GE|>|GT|<=|LE|<|LT|NOT)\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.torth",
          "match": "\\b(\\d+|u([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.torth",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.torth",
          "match": "\\\\."
        }
      ]
    }
  },
  "scopeName": "source.torth"
}
