// Project Euler Problem 9: Special Pythagorean triplet
// There exists exactly one Pythagorean triplet for which a + b + c = 1000.
// Find the product abc.
include "std"

// Return the product of found pythagorean triplet
function product_of_pythagorean_triplet int -> int :
  3 2 1
  take a b c n in
  // while a < n / 3
  while
    n 3 /
    a <
  do
    // while b < n / 2
    while
      n 2 /
      b <
    do
      // c = n - a - b
      n a - b -
      c =
      if
        // a² + b² == c²
        a dup *
        b dup * +
        c dup * ==
      do
        a b c * * return
      else NULL  // Match stack of the previous block
      endif drop
      b 1 +
      b =
    done 2 b =
    a 1 +
    a =
  done
  "Could not find pythagorean triplet for number " eputs n putu "\n" eputs
  NULL -1 exit
end

function main :
  1000 // n
  dup product_of_pythagorean_triplet
  "Product of pythagorean triplets that add up to " puts swap putu ":\n" puts putu "\n" puts
end
