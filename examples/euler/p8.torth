// Project Euler Problem 8: Largest product in a series
// Find the thirteen adjacent digits in the 1000-digit number that have the greatest product.
// What is the value of this product?
include "lib/std.torth"
memory current_series   str.size end
memory series_length    int.size end
memory largest_product  int.size end

// Store the current subseries' product to a temporary integer
function store_series_product int str -> int str :
  dup2 dup rot swap ptr+
  0 while dup series_length int.load > do
    dup2 ptr+ char.load '0' -
    if int.temp int.load 0 == do
      int.temp int.store
    else
      int.temp int.load swap * // dup print "\n" puts
      int.temp int.store
    endif
    1 +
  done drop2 drop
end

function largest_product_in_series int str -> int :
  series_length int.store
  0 while dup2 series_length int.load + ptr+ char.load NULL != do
    store_series_product

    // Store current subseries' product if it is the largest so far
    if largest_product int.load int.temp int.load > do
      int.temp int.load largest_product int.store
    endif

    // Zero temporary integer
    NULL int.temp int.store
    1 +
  done drop2
  largest_product int.load
end

function main -> :
  "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
  13 largest_product_in_series
  
  "The largest product in series for 13 adjacent digits: " puts
  print "\n" puts
end
