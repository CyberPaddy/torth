// Problem 7: 10001st prime
include "lib/std.torth"

// Array of prime integers
memory prime_list MEMORY_CAPACITY end
memory prime_list.size int.size  end

function prime_list.get_size -> int :
  prime_list.size load_INT
end

function prime_list.store int int -> :
  int.size * prime_list swap ptr+ store_INT
end

function prime_list.append int -> :
  prime_list.get_size

  over  // prime_number
  over  // prime_list.size

  // prime_list.append(prime_number)
  prime_list.store

  // prime_list.size += 1
  1 + prime_list.size store_INT drop
end

function get_nth_prime int -> int :
  int.size * prime_list swap ptr+ load_INT
end

function get_last_prime -> int :
  prime_list.get_size
  1 - get_nth_prime
end

// Param:   num
// Return:  num
function append_if_prime int -> int :
  0 // index

  // index < prime_list.size
  while dup get_nth_prime NULL != do

    // num % prime == 0
    if dup2 get_nth_prime % 0 == do
      break
    endif
    1 + // index++
  done

  // If prime, append to prime_list
  if dup get_nth_prime NULL == do
    over prime_list.append
  endif drop
end

// Param:   n
// Return:  n
function generate_prime_list int -> int :
  2 prime_list.append
  3 prime_list.append
  5 // num

  // prime_list.size < n
  while over prime_list.get_size < do

    // All primes are in 6n-1 or 6n+1 except 2 and 3
    append_if_prime 2 + // 6n-1
    append_if_prime 4 + // 6n+1
  done drop
end

function Main -> :
  10001 // n
  generate_prime_list

  print ". prime is: " puts get_last_prime print "\n" puts
end
