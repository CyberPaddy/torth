// math.torth - Library of mathematical functions
include "std"

// Calculate power of number and exponent. Return -1 if the exponent is negative.
// Params: exponent, number
// Return: power
function pow int int -> int :
  // x ^ 0 == 1
  if dup 0 == do
    drop drop 1 return
  // Negative exponents are not supported yet, return -1
  elif dup 0 < do
    drop drop -1 return
  endif

  over take current exponent original in
  1 // count
  // If count > exponent then we need to multiple the number at least one more time
  while dup exponent < do
    // Multiply current number with the original number
    current original *
    current =
    1 + // count++
  done drop current
end

// Slightly modified GCD function from https://en.wikipedia.org/wiki/Euclidean_algorithm#Implementations
// Params: num1, num2
// Return: gcd
function gcd int int -> int :
  while
    peek num1 num2 in
    num2 num1 % 0 !=
  do
    drop num2 num1 %
  done swap drop
end

// Return the square root of an integer rounded up to closest integer
function sqrt int -> int :
  0 while over over dup * > do
    1 +
  done swap drop
end
